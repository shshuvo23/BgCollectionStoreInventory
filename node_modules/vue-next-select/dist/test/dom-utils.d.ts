import { VueWrapper } from '@vue/test-utils';
import { ComponentPublicInstance } from 'vue';
export declare const isNullEl: (object: object) => boolean;
export declare const getElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>, selector: string) => (Element & {
    __vueParentComponent?: import("vue").ComponentInternalInstance | undefined;
}) | null;
export declare const getAllElements: (parentEl: Element | null) => Element[];
export declare const clickAllElements: (allElements: Element[]) => Promise<void>;
export declare const getFirstElement: (allElements: Element[]) => Element | null;
export declare const clickFirstElement: (element: Element | null) => Promise<void>;
export declare const getDropdownElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => (Element & {
    __vueParentComponent?: import("vue").ComponentInternalInstance | undefined;
}) | null;
export declare const getAllDropdownItemElements: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Element[];
export declare const clickAllDropdownItemElements: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Promise<void>;
export declare const getFirstDropdownItemElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Element | null;
export declare const clickFirstDropdownItemElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Promise<void>;
export declare const getTagElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => (Element & {
    __vueParentComponent?: import("vue").ComponentInternalInstance | undefined;
}) | null;
export declare const getAllTagItemElements: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Element[];
export declare const getAllDeleteIconElements: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Element[];
export declare const getFirstDeleteIconElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Element | null;
export declare const clickFirstDeleteIconElement: <T extends ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}>>>(wrapper: VueWrapper<T>) => Promise<void>;
